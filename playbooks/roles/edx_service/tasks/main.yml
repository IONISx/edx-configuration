---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role edx_service
#
# Overview:
#
# This role performs the repetive tasks that most edX roles
# require in our default configuration.
#
# Example play:
#
# Rather than being included in the play, this role
# is included as a dependency by other roles in the meta/mail.yml
# file.  The including role should add the following
# depency definition.
#
# dependencies:
#   - { role: edx_service, edx_service_name: "hotg" }
#

# Generating an ssh key so service users can do a git
# clone over ssh for public repositories without any
# additional configuration
- name: create application user
  user: >
    name="{{ edx_service_name }}"
    home="{{ COMMON_APP_DIR }}/{{ edx_service_name }}"
    createhome=yes
    shell=/bin/false
    generate_ssh_key=yes

# Assumes that the home directory has been created above.
- name: create edx_service app and venv dir
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ edx_service_name }}"
    group="{{ common_web_group }}"
  with_items:
    - "{{ COMMON_APP_DIR }}/{{ edx_service_name }}/venvs"

- name: create edx_service data and staticfiles dir
  file: >
    path="{{ item }}"
    state=directory
    owner="{{ edx_service_name }}"
    group="{{ common_web_group }}"
  with_items:
    - "{{ COMMON_DATA_DIR }}/{{ edx_service_name }}/data"
    - "{{ COMMON_DATA_DIR }}/{{ edx_service_name }}/staticfiles"


- name: create edx_service log dir
  file: >
    path="{{ item }}"
    state=directory
    owner="syslog"
    group="syslog"
  with_items:
    - "{{ COMMON_LOG_DIR }}/{{ edx_service_name }}"

- name: write out app config file
  template: >
    src=config.yml.j2
    dest={{ COMMON_CFG_DIR  }}/{{ edx_service_name }}.yml
    mode=0644
  tags:
    - deploy
  when: edx_service_config is defined

# Replace dashes with underscores to support roles that use
# dashes (the role vars will contain underscores)
- name: install a bunch of system packages on which edx_service relies
  apt: pkg={{ item }} state=present
  with_items: "{{ edx_service_name.replace('-', '_') }}_debian_pkgs"
  when: ansible_distribution in common_debian_variants

- name: install a bunch of system packages on which edx_service relies
  yum: pkg={{ item }} state=present
  with_items: "{{ edx_service_name.replace('-', '_') }}_redhat_pkgs"
  when: ansible_distribution in common_redhat_variants


- name: check if git repo exists before pruning
  stat: path={{ item.DESTINATION }}/.git
  register: git_dir_exists
  with_items: edx_service_repos

- name: git prune before checking out
  shell: cd {{ item.0.DESTINATION }} && git remote prune origin
  sudo_user: "{{ edx_service_name }}"
  when: >
    (item.1.stat.exists) and 
    (item.1.stat.isdir is defined) and
    item.1.stat.isdir
  with_together:
    - edx_service_repos
    - git_dir_exists.results

- name: validate git protocol
  fail: msg='REPOS.PROTOCOL must be "https" or "ssh"'
  when: (item.PROTOCOL != "https") and (item.PROTOCOL != "ssh")
  with_items: edx_service_repos

- name: install read-only ssh key
  copy: >
    content="{{ item.SSH_KEY }}" dest={{ edx_service_home }}.ssh/{{ item.REPO }}
    owner={{ edx_service_user }} group={{ edx_service_user }} mode=0600
  when: item.PROTOCOL == "ssh"
  with_items: edx_service_repos

- name: checkout code over ssh
  git: >
    repo=git@{{ item.DOMAIN }}:{{ item.PATH }}/{{ item.REPO }}
    dest={{ item.DESTINATION }}  version={{ item.VERSION }}
    accept_hostkey=yes key_file={{ edx_service_home }}.ssh/{{ item.REPO }}
  sudo_user: "{{ edx_role_name }}"
  register: code_checkout
  when: item.PROTOCOL == "ssh"
  with_items: edx_service_repos

- name: checkout code over https
  git: >
    repo=https://{{ item.DOMAIN }}/{{ item.PATH }}/{{ item.REPO }}
    dest={{ item.DESTINATION }}  version={{ item.VERSION }}
  sudo_user: "{{ edx_role_name }}"
  register: code_checkout
  when: item.PROTOCOL == "https"
  with_items: edx_service_repos


- name: get instance information
  action: ec2_facts
  #old syntax - should be fixed

- name: tag instance
  ec2_tag: resource={{ ansible_ec2_instance_id }} region={{ ansible_ec2_placement_region }}
  args:
    tags:
      "version:{{edx_service_name}}" : "{{ item.0.DOMAIN }}/{{ item.0.PATH }}/{{ item.0.REPO }} {{ item.1.after |truncate(7,True,'') }}"
  when: item.1.after is defined
  with_together: 
    - edx_service_repos
    - code_checkout.results

#TODO: restart supervisor- depends on supervisor being refactored into this role
